#include "../std/if.dotvm"

: evaluate_num
	pop rax
	
	mod $rax, 15
	pop reg

	#(IF $reg, eq, 0)
		print "Fizzbuzz\n"

	#(ELSE)
	
		mod $rax, 5
		pop reg
		
		
		#(IF $reg, eq, 0)
			print "Fizz\n"

		#(ELSE)
			
			mod $rax, 3
			pop reg

			#(IF $reg, eq, 0)
				print "Buzz\n"
			
			#(ELSE)
				print $rax, "\n"
				
			#(ENDIF)

		#(ENDIF)

	#(ENDIF)
	
	jump ret

: main
	mov rcx, 0

	: loop
		push $rcx
		call evaluate_num
		
		add $rcx, 1
		pop rcx
		
		ifeq le, $rcx, 100
		jump loop
